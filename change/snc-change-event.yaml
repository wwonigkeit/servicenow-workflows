#
# NOTE: The workflow uses the table_api to manage changes in Servicenow
# 
# This is an event-driven workflow for Servicenow.com integration. The workflow requires the following
# information to be sent as a CloudEvent:
#     Event Name:
#       - com.direktiv.snc.change.list (retrieves a list of all changes from the "change_request" table), OR
#       - com.direktiv.snc.change.get (retrieves a specified record from the "change_request" table), OR
#       - com.direktiv.snc.change.create (updates a specified record in  the "change_request" table), OR
#       - com.direktiv.snc.change.update (creates a record in the "change_request" table), OR 
#       - com.direktiv.snc.change.delete (deletes a record in the "change_request" table)
#     Servicenow.com URL: Servicenow.com URL in format https://dev80617.service-now.com
#     Servicenow.com Username: Servicenow.com username for basic authentication
#     Servicenow.com Password: Servicenow.com password for basic authentication
#  

description: Service-now.com change list, get, create, update or delete workflow

#
# The start definition which starts the worklfow based on the event received from the
# master workflow. Example of the event is shown above in the description
#
start:
  type: eventsXor
  state: strip-fields
  events: 
    - type: com.direktiv.snc.incident.list
    - type: com.direktiv.snc.incident.get
    - type: com.direktiv.snc.incident.create
    - type: com.direktiv.snc.incident.update
    - type: com.direktiv.snc.incident.delete

#
# Define the "request" knative-function to be used for all the Service-now.com 
# queries and interaction
#
functions:
# From https://apps.direktiv.io/search-results/http-request?v=1.0
- id: http-request
  image: gcr.io/direktiv/functions/http-request:1.0
  type: knative-workflow

states:
# There are 2 options to handling the events. Select the next state based on the event name (preferred),
# or select based on the "action" setting in the data payload of the event. The "action" payload setting below
# is added for reference and can be used
# - id: strip-fields
#   type: noop
#   transform: jq(.[] | .data)
#   transition: transition-action
#
# The first state is used to transition to the correct action defined by the "action" JSON input.
# This is a simple switch state
#
# - id: transition-action
#   type: switch
#   conditions:
#   - condition: jq(.action == "list")
#     transition: list-change-request
#     transform: jq(.[] | .data)
#   - condition: jq(.action == "get")
#     transition: get-change-request
#     transform: jq(.[] | .data)
#   - condition: jq(.action == "create")
#     transition: create-change-request
#     transform: jq(.[] | .data)
#   - condition: jq(.action == "update")
#     transition: update-change-request
#     transform: jq(.[] | .data)
#   - condition: jq(.action == "delete")
#     transition: delete-change-request
#     transform: jq(.[] | .data)
#   defaultTransition: exception-catch
#   defaultTransform: jq(.[] | .data)

- id: strip-fields
  type: noop
  transform: jq(.[] | .)
  transition: transition-type

# The first state is used to transition to the correct action defined by the "action" JSON input.
# This is a simple switch state
- id: transition-type
  type: switch
  conditions:
  - condition: jq(.type == "com.direktiv.snc.change.list")
    transition: list-change-request
    transform: jq(.data | .)
  - condition: jq(.type == "com.direktiv.snc.change.get")
    transition: get-change-request
    transform: jq(.data | .)
  - condition: jq(.type == "com.direktiv.snc.change.create")
    transition: create-change-request
    transform: jq(.data | .)
  - condition: jq(.type == "com.direktiv.snc.change.update")
    transition: update-change-request
    transform: jq(.data | .)
  - condition: jq(.type == "com.direktiv.snc.change.delete")
    transition: delete-change-request
    transform: jq(.data | .)
  defaultTransition: exception-catch
  defaultTransform: jq(.data | .)

#
# The list-change-request state is very simple. Requires the username and password and simply lists all
# of the change requests in the table. The equivalent REST API call for Servicenow.com is:
#   - https://developer.servicenow.com/dev.do#!/reference/api/sandiego/rest/c_TableAPI#table-GET
#
- id: list-change-request
  type: action
  log: jq(.)
  action:
    function: http-request
    input:
      debug: false
      method: GET
      url: 'jq(.sncurl)/api/now/table/change_request'
      params:
        # In the params fields, users can add specific parameters to filter on. Below are a couple of examples to use:
        # active: true
        # state: closed
        sysparm_display_value: "false" # Options are true, false or all
        sysparm_exclude_reference_link: "false" # Flag that indicates whether to exclude Table API links for reference fields
        # sysparm_fields:  # Comma-separated list of fields to return in the response, default returns all
        sysparm_limit: "100" # Maximum number of records to return
        sysparm_no_count: "true" # Flag that indicates whether to execute a select count(*) query on the table to return the number of rows in the associated table.
        sysparm_offset: "0" # Starting record index for which to begin retrieving records
        # sysparm_query: # Encoded query used to filter the result set. You can use a UI filter to obtain a properly encoded query.
        # sysparm_query_category: # Name of the category to use for queries.
        sysparm_query_no_domain: "false" # Flag that indicates whether to restrict the record search to only the domains for which the logged in user is configured
      headers:
        Accept: application/json
        Content-Type: application/json
      username: jq(.sncusername)
      password: jq(.sncpassword)
    retries:
      max_attempts: 3
      delay: PT30S
      multiplier: 2.0
      codes: [".*"]
  transform: jq(.return[0])
  transition: event-change-response
  catch:
    - error: "*"
      transition: exception-catch

#
# The get-change-request state is very simple. Requires the username and password and simply gets a specific
# change request in the table based on a sys_id for the record. The equivalent REST API call for Servicenow.com is:
#   - https://developer.servicenow.com/dev.do#!/reference/api/sandiego/rest/c_TableAPI#table-GET-id
#
- id: get-change-request
  type: action
  log: jq(.)
  action:
    function: http-request
    input:
      debug: false
      method: GET
      url: 'jq(.sncurl)/api/now/table/change_request/jq(.change_sys_id)'
      params:
        # In the params fields, users can add specific parameters to filter on. Below are a couple of examples to use:
        # active: true
        # state: closed
        sysparm_display_value: "false" # Options are true, false or all
        sysparm_exclude_reference_link: "false" # Flag that indicates whether to exclude Table API links for reference fields
        # sysparm_fields:  # Comma-separated list of fields to return in the response, default returns all
        sysparm_limit: "10" # Maximum number of records to return
        sysparm_no_count: "true" #Flag that indicates whether to execute a select count(*) query on the table to return the number of rows in the associated table.
        sysparm_offset: "0" # Starting record index for which to begin retrieving records
        # sysparm_query: # Encoded query used to filter the result set. You can use a UI filter to obtain a properly encoded query.
        # sysparm_query_category: # Name of the category to use for queries.
        sysparm_query_no_domain: "false" # Flag that indicates whether to restrict the record search to only the domains for which the logged in user is configured
      headers:
        Accept: application/json
        Content-Type: application/json
      username: jq(.sncusername)
      password: jq(.sncpassword)
    retries:
      max_attempts: 3
      delay: PT30S
      multiplier: 2.0
      codes: [".*"]
  transform: jq(.return[0])
  transition: event-change-response
  catch:
    - error: "*"
      transition: exception-catch

#
# The create-change-request state requires the username and password and simply creates a new
# change request in the table based on a information provided. The equivalent REST API call for Servicenow.com is:
#   - https://developer.servicenow.com/dev.do#!/reference/api/sandiego/rest/c_TableAPI#table-POST
#
- id: create-change-request
  type: action
  log: jq(.)
  action:
    function: http-request
    input:
      debug: false
      method: POST
      url: 'jq(.sncurl)/api/now/table/change_request'
      params:
        # In the params fields, users can add specific parameters to filter on. Below are a couple of examples to use:
        # active: true
        # state: closed
        sysparm_display_value: "false" # Options are true, false or all
        sysparm_exclude_reference_link: "false" # Flag that indicates whether to exclude Table API links for reference fields
        # sysparm_fields:  # Comma-separated list of fields to return in the response, default returns all
        sysparm_input_display_value: "false" # Flag that indicates whether to set field values using the display value or the actual value.
      headers:
        Accept: application/json
        Content-Type: application/json
      username: jq(.sncusername)
      password: jq(.sncpassword)
      content:
        value:
          # The values below are examples only, every servicenow instance is different - PLEASE REMEMBER TO CONTACT YOUR SNC ADMINISTRATOR
          # TO GET THE REQUIRED FIELDS
          description: 'jq(.description)' # Free form string to add description (long - detailed)
          impact: 'jq(.impact)' # Number ranging from 1 - High to 3 - Low
          severity: 'jq(.severity)' # Number ranging from 1 - High to 3 - Low
          short_description: 'jq(.short_description)' # Free form string to add description (long - detailed)
    retries:
      max_attempts: 3
      delay: PT30S
      multiplier: 2.0
      codes: [".*"]
  transform: jq(.return[0])
  transition: event-change-response
  catch:
    - error: "*"
      transition: exception-catch

#
# The update-change-request state requires the username and password and simply updates an existing
# change request in the table based on a information provided. The equivalent REST API call for Servicenow.com is:
#   - https://developer.servicenow.com/dev.do#!/reference/api/sandiego/rest/c_TableAPI#table-PATCH
#
- id: update-change-request
  type: action
  log: jq(.)
  action:
    function: http-request
    input:
      debug: false
      method: PATCH
      url: 'jq(.sncurl)/api/now/table/change_request/jq(.change_sys_id)'
      params:
        # sysparm_fields:  # Comma-separated list of fields to return in the response, default returns all
        # In the params fields, users can add specific parameters to filter on. Below are a couple of examples to use:
        # active: true
        # state: closed
        sysparm_display_value: "false" # Options are true, false or all
        sysparm_input_display_value: "false" # Flag that indicates whether to set field values using the display value or the actual value.
      headers:
        Accept: application/json
        Content-Type: application/json
      username: jq(.sncusername)
      password: jq(.sncpassword)
      content:
        value:
          # The values below are examples only, every servicenow instance is different - PLEASE REMEMBER TO CONTACT YOUR SNC ADMINISTRATOR
          # TO GET THE REQUIRED FIELDS
          description: 'jq(.description)' # Free form string to add description (long - detailed)
          impact: 'jq(.impact)' # Number ranging from 1 - High to 3 - Low
          severity: 'jq(.severity)' # Number ranging from 1 - High to 3 - Low
          short_description: 'jq(.short_description)' # Free form string to add description (long - detailed)
    retries:
      max_attempts: 3
      delay: PT30S
      multiplier: 2.0
      codes: [".*"]
  transform: jq(.return[0])
  transition: event-change-response
  catch:
    - error: "*"
      transition: exception-catch

#
# The delete-change-request state requires the username and password and simply deletes an existing change request
# in the table based on a change_sys_id provided. The equivalent REST API call for Servicenow.com is:
#   - https://developer.servicenow.com/dev.do#!/reference/api/sandiego/rest/c_TableAPI#table-DELETE
#
- id: delete-change-request
  type: action
  log: jq(.)
  action:
    function: http-request
    input:
      debug: false
      method: DELETE
      url: 'jq(.sncurl)/api/now/table/change_request/jq(.change_sys_id)'
      headers:
        Accept: application/json
        Content-Type: application/json
      username: jq(.sncusername)
      password: jq(.sncpassword)
    retries:
      max_attempts: 3
      delay: PT30S
      multiplier: 2.0
      codes: [".*"]
  transform: jq(.return[0])
  transition: event-change-response
  catch:
    - error: "*"
      transition: exception-catch

#
# Create a CloudEvent with the appropriate returned data
#
- id: event-change-response
  type: generateEvent
  event: 
    type: com.direktiv.snc.change.response
    source: itsm/snc/change
    data: jq(.)

#
# Handle any failed connections
#
- id: exception-catch
  type: generateEvent
  event: 
    type: com.direktiv.snc.change.error
    source: itsm/snc/change
    data: jq(.)
